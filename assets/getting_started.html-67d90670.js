import{_ as t,X as n,Y as s,a1 as a}from"./framework-23afdf50.js";const e={},o=a(`<h2 id="getting-start" tabindex="-1"><a class="header-anchor" href="#getting-start" aria-hidden="true">#</a> Getting-start</h2><h2 id="judger" tabindex="-1"><a class="header-anchor" href="#judger" aria-hidden="true">#</a> Judger</h2><p>请提前安装 <code>Docker</code>、<code>Docker-compose</code> 。</p><h3 id="安装-启动" tabindex="-1"><a class="header-anchor" href="#安装-启动" aria-hidden="true">#</a> 安装&amp;&amp;启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/isther/judger.git /tmp/judger
<span class="token function">mkdir</span> ./sxu-judger
<span class="token function">cp</span> /tmp/judger/docker-compose.yml <span class="token builtin class-name">.</span>
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认 9000 端口，如有需要，在<code>docker-compose.yml</code>中修改。</p><ul><li><code>log</code>: 日志文件夹</li><li><code>code</code>: 代码文件夹</li><li><code>sample</code>: 样例文件夹</li></ul><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> Api</h3><h4 id="ping" tabindex="-1"><a class="header-anchor" href="#ping" aria-hidden="true">#</a> <code>/ping</code></h4><h5 id="接口说明" tabindex="-1"><a class="header-anchor" href="#接口说明" aria-hidden="true">#</a> 接口说明</h5><p><strong>服务器及判题机健康状态</strong></p><ul><li>请求类型: <code>HTTP</code></li><li>请求地址: <code>/ping</code></li><li>请求方式: <code>GET</code></li><li>Content-Type: <code>multipart/form-data</code></li></ul><p><strong>返回结果:</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pong&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="submit" tabindex="-1"><a class="header-anchor" href="#submit" aria-hidden="true">#</a> <code>/submit</code></h4><ul><li>请求类型: <code>HTTP</code></li><li>请求地址: <code>/submit</code></li><li>请求方式: <code>POST</code></li><li>Content-Type: <code>application/json</code></li><li>响应类型: <code>JSON</code></li></ul><p><strong>请求参数</strong></p><table><thead><tr><th>参数名</th><th>示例值</th><th>参数类型</th><th>是否必填</th><th>参数描述</th></tr></thead><tbody><tr><td>submit_id</td><td>SXU001</td><td>String</td><td>是</td><td>提交 ID</td></tr><tr><td>problem_id</td><td>SXU001</td><td>String</td><td>是</td><td>题目 ID</td></tr><tr><td>problem_type</td><td>1</td><td>String</td><td>是</td><td>题目类型</td></tr><tr><td>code_type</td><td>C</td><td>String</td><td>是</td><td>代码类型</td></tr><tr><td>code_source_name</td><td>SubmitID1.c</td><td>String</td><td>是</td><td>源代码路径</td></tr><tr><td>time_limit</td><td>1000</td><td>String</td><td>是</td><td>时间限制</td></tr><tr><td>memory_limit</td><td>268435456</td><td>String</td><td>是</td><td>内存限制</td></tr></tbody></table><p>Json 请求实例：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;submit_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;SXU001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;problem_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TEST001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;problem_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;code_source_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;SubmitID1.c&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;time_limit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;memory_limit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;268435456&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>返回数据</strong></p><table><thead><tr><th style="text-align:left;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">result</td><td style="text-align:center;">数组</td><td style="text-align:center;">运行结果</td></tr><tr><td style="text-align:left;">- sample_id</td><td style="text-align:center;">String</td><td style="text-align:center;">样例 ID</td></tr><tr><td style="text-align:left;">- status</td><td style="text-align:center;">String</td><td style="text-align:center;">此样例运行结果</td></tr><tr><td style="text-align:left;">- cpu_time</td><td style="text-align:center;">String</td><td style="text-align:center;">此样例运行 Cpu 消耗时间</td></tr><tr><td style="text-align:left;">- real_time</td><td style="text-align:center;">String</td><td style="text-align:center;">此样例运行实际消耗时间</td></tr><tr><td style="text-align:left;">- memory</td><td style="text-align:center;">String</td><td style="text-align:center;">此样例运行消耗内存</td></tr><tr><td style="text-align:left;">- signal</td><td style="text-align:center;">String</td><td style="text-align:center;">运行结束信号</td></tr></tbody></table><p>返回数据实例:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;sample_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Accepted&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cpu_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;real_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;memory&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1372160&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;signal&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;sample_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Wrong Answer&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cpu_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;real_time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;memory&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1376256&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;signal&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),p=[o];function i(d,l){return n(),s("div",null,p)}const c=t(e,[["render",i],["__file","getting_started.html.vue"]]);export{c as default};
